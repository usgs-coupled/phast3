 
# Makefile for PHAST
#
# Fortran 90 version
#
# =============================================================================
# Significant suffixes [assuming Fortran 90 (.f90)  source code]:

TOPDIR = ..
PROGRAM = phast
PROGRAM1 = phastinput
VERSION=0.4
.SUFFIXES : .o .f .F90 .f90 .c 

# -----------------------------------------------------------------------------
.f90.o :
	${FC} -c ${FFLAGS} $<
.F90.o :
	${FC} -c ${FFLAGS} $< -o $@
.c.o :
	${CC} ${CFLAGS} -c -o $@ $<

#hdf options
#HDF5_ROOT=/z/lobo/home/charlton/hdf5
HDF5_ROOT=/usr
#HDF5_ROOT=/z/parkplace/usr
#HDF5_INCLUDES= -I${HDF5_ROOT}/include
#HDF5_INCLUDES= -I/z/parkplace/home/dlpark/include
#HDF5_INCLUDES= -I/z/lobo/home/charlton/hdf5/include
#HDF5_LIBS=${HDF5_ROOT}/lib/libhdf5.a -lz -lpthread
HDF5_INCLUDES=
HDF5_LIBS=${HDF5_ROOT}/lib/libhdf5.a -lz -lpthread
EFENCE_LIB=-L/z/parkplace/home/dlpark/packages/efence

DEFINE_HDF=-DHDF5_CREATE
DEFINE_MPI=-DUSE_MPI
DEFINE_MERGE=-DMERGE_FILES

ifeq ($(CFG), MPI_LAHEY)
  DEFINES      = $(DEFINE_HDF) $(DEFINE_MPI) $(DEFINE_MERGE) -DNDEBUG
  VPATH        = ..
  LAMHF77      = /z/lobo/usr/local/lf9560/bin/lf95
  export LAMHF77
  FC           = hf77
  FFLAGS       = -O $(DEFINES)
  CC           = hcc
  CFLAGS       = -Wall -pedantic -O3 $(DEFINES) 
  OBJECT_FILES = $(COMMON_FOBJS) $(COMMON_COBJS) $(MPI_OBJS) $(HDF_OBJS) $(MERGE_OBJS)
  LD_FLAGS     = -static-flib  -lm ${HDF5_LIBS} 
endif

ifeq ($(CFG), MPI_LAHEY_DEBUG)
  DEFINES      = $(DEFINE_HDF) $(DEFINE_MPI) $(DEFINE_MERGE)
  VPATH        = ..
  LAMHF77      = /z/lobo/usr/local/lf9560/bin/lf95
  export LAMHF77
  FC           = hf77
  FFLAGS       = -g --chkglobal --warn --info $(DEFINES)
  CC           = hcc
  CFLAGS       = -Wall -pedantic -g $(DEFINES)
  OBJECT_FILES = $(COMMON_FOBJS) $(COMMON_COBJS) $(MPI_OBJS) $(HDF_OBJS) $(MERGE_OBJS)
  LD_FLAGS     = -static-flib -lm ${HDF5_LIBS} 
endif

ifeq ($(CFG), SERIAL_LAHEY)
  DEFINES      = $(DEFINE_HDF) -DNDEBUG
  VPATH        = ..
  LAMHF77      = /z/lobo/usr/local/lf9560/bin/lf95
  export LAMHF77
  FC           = hf77
  FFLAGS       = -g $(DEFINES)
  CC           = hcc
  CFLAGS       = -Wall -pedantic -g $(DEFINES)
  OBJECT_FILES = $(COMMON_FOBJS) $(COMMON_COBJS) $(HDF_OBJS)
  LD_FLAGS     = -static-flib -lm ${HDF5_LIBS} 
endif

ifeq ($(CFG), SERIAL_LAHEY_DEBUG)
  DEFINES      = $(DEFINE_HDF) 
  VPATH        = ..
  LAMHF77      = /z/lobo/usr/local/lf9560/bin/lf95
  export LAMHF77
  FC           = hf77
  FFLAGS       = -g --chkglobal --warn --info $(DEFINES)
#   FFLAGS       = -g --chk a,e,s,u --warn --info $(DEFINES)
#  FFLAGS       = -g --warn --info $(DEFINES)
  CC           = hcc
  CFLAGS       = -Wall -pedantic -g $(DEFINES)
  OBJECT_FILES = $(COMMON_FOBJS) $(COMMON_COBJS) $(HDF_OBJS)
  LD_FLAGS     = -static-flib -lm ${HDF5_LIBS} 
endif


ifeq ($(CFG), MPI_ABSOFT)
  DEFINES      = $(DEFINE_HDF) $(DEFINE_MPI) $(DEFINE_MERGE) -DNDEBUG  
  VPATH        = ..
  LAMHF77      = /usr/absoft/bin/f90
  export LAMHF77
  FC           = hf77
  FDEBUG       = -O -en  # -C
  FMISC        = -YEXT_NAMES=LCS -s -B108 -YCFRL=1 -trap=DIVBYZERO,OVERFLOW
  FFLAGS       = $(FDEBUG) $(FMISC) $(DEFINES)
  CC           = hcc
  CFLAGS       = -Wall -pedantic -O3 $(DEFINES) $(HDF5_INCLUDES)
  OBJECT_FILES = $(COMMON_FOBJS) $(COMMON_COBJS) $(MPI_OBJS) $(HDF_OBJS) $(MERGE_OBJS)
  LD_FLAGS     = -lm ${HDF5_LIBS} -L/usr/absoft/lib 
endif

ifeq ($(CFG), MPI_ABSOFT_DEBUG)
  DEFINES      = $(DEFINE_HDF) $(DEFINE_MPI) $(DEFINE_MERGE)
  VPATH        = ..
  LAMHF77      = /usr/absoft/bin/f90
  export LAMHF77
  FC           = hf77
  FDEBUG       = -g -en  # -C
  FMISC        = -YEXT_NAMES=LCS -s -B108 -YCFRL=1 -trap=DIVBYZERO,OVERFLOW
  FFLAGS       = $(FDEBUG) $(FMISC) $(DEFINES)
  CC           = hcc
  CFLAGS       = -Wall -pedantic -ansi -g $(DEFINES) $(HDF5_INCLUDES)# -Wconversion 
  OBJECT_FILES = $(COMMON_FOBJS) $(COMMON_COBJS) $(MPI_OBJS) $(HDF_OBJS) $(MERGE_OBJS)
  LD_FLAGS     = -lm ${HDF5_LIBS} -L/usr/absoft/lib # ${EFENCE_LIB} -lefence
endif

ifeq ($(CFG), SERIAL_ABSOFT)
  DEFINES      = $(DEFINE_HDF) -DNDEBUG 
  VPATH        = ..
  FC           = /usr/absoft/bin/f90
  FDEBUG       = -O -en  # -C
  FMISC        = -YEXT_NAMES=LCS -s -B108 -YCFRL=1 -trap=DIVBYZERO,OVERFLOW
  FFLAGS       = $(FDEBUG) $(FMISC) $(DEFINES)
  CC           = gcc
  CFLAGS       = -Wall -pedantic -O3 $(DEFINES) $(HDF5_INCLUDES)
  OBJECT_FILES = $(COMMON_FOBJS) $(COMMON_COBJS) $(HDF_OBJS) 
  LD_FLAGS     = -lm ${HDF5_LIBS} -L/usr/absoft/lib
endif

ifeq ($(CFG), SERIAL_ABSOFT_DEBUG)
  DEFINES      = $(DEFINE_HDF)
  VPATH        = ..
  FC           = /usr/absoft/bin/f90
  FDEBUG       = -g -en  # -C
  FMISC        = -YEXT_NAMES=LCS -s -B108 -YCFRL=1 -trap=DIVBYZERO,OVERFLOW
  FFLAGS       = $(FDEBUG) $(FMISC) $(DEFINES)
  CC           = gcc
  CFLAGS       = -Wall -g $(DEFINES) $(HDF5_INCLUDES)
  OBJECT_FILES = $(COMMON_FOBJS) $(COMMON_COBJS) $(HDF_OBJS) 
  LD_FLAGS     = -lm ${HDF5_LIBS} -L/usr/absoft/lib # ${EFENCE_LIB} -lefence
endif

ifeq ($(CFG), SERIAL_SUN)
  HDF5_ROOT    = /z/sunarcolkr/home/klkipp/local
  HDF5_LIBS    = ${HDF5_ROOT}/lib/libhdf5.a -lz
  DEFINES      = $(DEFINE_HDF) -DNDEBUG 
  VPATH        = ..
  FC           = /opt/SUNWspro/bin/f90-2.0
  FFLAGS       = -fast -ftrap=common $(DEFINES)
  CC		= /opt/SUNWspro/bin/cc
  CFLAGS       = -fast $(DEFINES) -I/z/sunarcolkr/home/klkipp/local/include
  OBJECT_FILES = $(COMMON_FOBJS) $(COMMON_COBJS) $(HDF_OBJS)
  LD_FLAGS     = -dn /z/sunarcolkr/home/klkipp/local/lib/libhdf5.a -L/z/sunarcolkr/home/klkipp/local/hdf/lib -L/z/sunarcolkr/usr/local/lib  -lz -v -lm
endif

ifeq ($(CFG), SERIAL_SUN_DEBUG)
  HDF5_ROOT    = /z/sunarcolkr/home/klkipp/local
  HDF5_LIBS    = ${HDF5_ROOT}/lib/libhdf5.a -lz
  DEFINES      = $(DEFINE_HDF)
  VPATH        = ..
  FC           = /opt/SUNWspro/bin/f90-2.0
  FFLAGS       = -g -C -xtarget=native -ftrap=common $(DEFINES)
  CC		= /opt/SUNWspro/bin/cc
  CFLAGS       = -fast $(DEFINES) -I/z/sunarcolkr/home/klkipp/local/include
  OBJECT_FILES = $(COMMON_FOBJS) $(COMMON_COBJS) $(HDF_OBJS)
  LD_FLAGS     = -dn /z/sunarcolkr/home/klkipp/local/lib/libhdf5.a -L/z/sunarcolkr/home/klkipp/local/hdf/lib -L/z/sunarcolkr/usr/local/lib  -lz -v -lm
endif


# -----------------------------------------------------------------------------
# (d) Create expected object file list, with .o extension:     [TARGETS OF PRE-
#     REQUISITE (.f90,.f) SOURCE FILES]
#

COMMON_COBJS =  advection.o basic.o basicsubs.o cl1.o input.o integrate.o inverse.o \
	        isotopes.o kinetics.o mainsubs.o output.o model.o p2clib.o parse.o \
		phqalloc.o prep.o print.o read.o readtr.o spread.o step.o structures.o \
		tally.o tidy.o transport.o utilities.o \
		cvdense.o cvode.o dense.o nvector.o nvector_serial.o smalldense.o sundialsmath.o \
		hst.o hstsubs.o mix.o phast_files.o # phreeqc_files.o 

#COMMON_COBJS =	advection.o basic.o cl1.o integrate.o inverse.o hst.o kinetics.o\
#		mainsubs.o model.o p2clib.o parse.o phqalloc.o prep.o print.o\
#		read.o readtr.o spread.o step.o structures.o tidy.o\
#		transport.o utilities.o hstsubs.o mix.o basicsubs.o\
#		isotopes.o \
#		cvdense.o cvode.o dense.o nvector.o nvector_serial.o smalldense.o sundialsmath.o

COMMON_FOBJS =	abmult.o aplbce.o aplbce_ss_flow.o aplbci.o armult.o asembl.o\
		asmslc.o asmslp.o asmslp_ss_flow.o bsode.o calcc.o calc_velocity.o clog.o closef.o\
		coeff.o coeff_ss_flow.o crsdsp.o d4ord.o d4zord.o dbmult.o dump.o\
		efact.o ehoftp.o el1slv.o elslv.o error1.o error2.o error3.o error4.o\
		errprt.o etom1.o etom2.o euslv.o formr.o gcgris.o hunt.o incidx.o\
		indx_rewi_bc.o indx_rewi.o init1.o init2_1.o init2_2.o init2_3.o\
		init2_post_ss.o init3.o interp.o irewi.o ldchar.o ldci.o ldcir.o\
		ldind.o ldipen.o ldmar1.o load_indx_bc.o lsolv.o modules.o mtoijk.o\
		nintrp.o openf.o phast.o prchar.o print_control_mod.o prntar.o rbord.o\
		read1.o read2.o read3.o reordr.o rewi3.o rewi.o rfact.o rfactm.o\
		rhsn.o rhsn_ss_flow.o sbcflo.o simulate_ss_flow.o stonb.o sumcal1.o sumcal2.o \
		sumcal_ss_flow.o terminate_phast.o tfrds.o timstp.o timstp_ss_flow.o\
		update_print_flags.o\
		usolv.o viscos.o vpsv.o wbbal.o wbcflo.o wellsc.o wellsc_ss_flow.o\
		wellsr.o wellsr_ss_flow.o welris.o wfdydz.o write1.o write2_1.o write2_2.o write3.o\
		write3_ss_flow.o write4.o write5.o write5_ss_flow.o write6.o 

HDF_OBJS     =  hdf.o hdf_f.o

MERGE_OBJS   =	merge.o

MPI_OBJS     =	mpimod.o


# Prevent error before make is recursively invoked
DISTFILE=foo

# Locations to save compressed tar file for distribution
DIST_DIR=/z/parkplace/home/dlpark/temp

SRCFILES=abmult.f90 \
	  advection.c \
	  aplbce.f90 \
	  aplbce_ss_flow.f90 \
	  aplbci.f90 \
	  armult.f90 \
	  asembl.f90 \
	  asmslc.f90 \
	  asmslp.f90 \
	  asmslp_ss_flow.f90 \
	  basic.c \
	  basicsubs.c \
	  bsode.f90 \
	  calcc.f90 \
	  calc_velocity.f90 \
	  cl1.c \
	  clog.f90 \
	  closef.F90 \
	  coeff.f90 \
	  coeff_ss_flow.f90 \
	  crsdsp.f90 \
	  cvdense.c \
	  cvdense.h \
	  cvode.c \
	  cvode.h \
	  d4ord.f90 \
	  d4zord.f90 \
	  dbmult.f90 \
	  dense.c \
	  dense.h \
	  dump.f90 \
	  efact.f90 \
	  ehoftp.f90 \
	  el1slv.f90 \
	  elslv.f90 \
	  error1.f90 \
	  error2.f90 \
	  error3.f90 \
	  error4.f90 \
	  errprt.f90 \
	  etom1.f90 \
	  etom2.f90 \
	  euslv.f90 \
	  formr.f90 \
	  gcgris.f90 \
	  global.h \
	  hdf.c \
	  hdf_f.f90 \
	  hst.c \
	  hst.h \
	  hstsubs.c \
	  hunt.f90 \
	  ifrd.inc \
	  ifwr.inc \
	  incidx.f90 \
	  indx_rewi_bc.f90 \
	  indx_rewi.f90 \
	  init1.f90 \
	  init2_1.f90 \
	  init2_2.f90 \
	  init2_3.f90 \
	  init2_post_ss.f90 \
	  init3.f90 \
	  input.c \
	  input.h \
	  integrate.c \
	  interp.f90 \
	  inverse.c \
	  irewi.f90 \
	  isotopes.c \
	  kinetics.c \
	  kinetics.h \
	  ldchar.f90 \
	  ldci.f90 \
	  ldcir.f90 \
	  ldind.f90 \
	  ldipen.f90 \
	  ldmar1.f90 \
	  load_indx_bc.f90 \
	  lsolv.f90 \
	  main.c \
	  mainsubs.c \
	  merge.c \
	  mix.c \
	  model.c \
	  modules.f90 \
	  mpimod.F90 \
	  mtoijk.f90 \
	  nintrp.f90 \
	  nvector.c \
	  nvector.h \
	  nvector_serial.c \
	  nvector_serial.h \
	  openf.F90 \
	  output.c \
	  output.h \
	  p2c.h \
	  p2clib.c \
	  parse.c \
	  phast.F90 \
	  phast_files.c \
	  phast_files.h \
	  phqalloc.c \
	  phqalloc.h \
	  phreeqc_files.c \
	  phrqproto.h \
	  phrqtype.h \
	  prchar.f90 \
	  prep.c \
	  print.c \
	  print_control_mod.f90 \
	  prntar.f90 \
	  rbord.f90 \
	  read1.f90 \
	  read2.f90 \
	  read3.f90 \
	  read.c \
	  readtr.c \
	  reordr.f90 \
	  rewi3.f90 \
	  rewi.f90 \
	  rfact.f90 \
	  rfactm.f90 \
	  rhsn.f90 \
	  rhsn_ss_flow.f90 \
	  sbcflo.f90 \
	  simulate_ss_flow.f90 \
	  smalldense.c \
	  smalldense.h \
	  spread.c \
	  step.c \
	  stonb.f90 \
	  structures.c \
	  sumcal1.f90 \
	  sumcal2.f90 \
	  sumcal_ss_flow.f90 \
	  sundialsmath.c \
	  sundialsmath.h \
	  sundialstypes.h \
	  tally.c \
	  terminate_phast.F90 \
	  tfrds.f90 \
	  tidy.c \
	  timstp.f90 \
	  timstp_ss_flow.f90 \
	  transport.c \
	  update_print_flags.f90 \
	  usolv.f90 \
	  utilities.c \
	  viscos.f90 \
	  vpsv.f90 \
	  wbbal.f90 \
	  wbcflo.f90 \
	  wellsc.f90 \
	  wellsc_ss_flow.f90 \
	  wellsr.f90 \
	  wellsr_ss_flow.f90 \
	  welris.f90 \
	  wfdydz.f90 \
	  write1.f90 \
	  write2_1.f90 \
	  write2_2.f90 \
	  write3.f90 \
	  write3_ss_flow.f90 \
	  write4.f90 \
	  write5.f90 \
	  write5_ss_flow.f90 \
	  write6.f90 

FILES= \
	srcphast/abmult.f90 \
	srcphast/aplbce.f90 \
	srcphast/aplbce.f90 \
	srcphast/aplbce_ss_flow.f90 \
	srcphast/aplbci.f90 \
	srcphast/armult.f90 \
	srcphast/asembl.f90 \
	srcphast/asmslc.f90 \
	srcphast/asmslp.f90 \
	srcphast/asmslp_ss_flow.f90 \
	srcphast/bsode.f90 \
	srcphast/calcc.f90 \
	srcphast/calc_velocity.f90 \
	srcphast/clog.f90 \
	srcphast/closef.F90 \
	srcphast/coeff.f90 \
	srcphast/coeff_ss_flow.f90 \
	srcphast/crsdsp.f90 \
	srcphast/d4ord.f90 \
	srcphast/d4zord.f90 \
	srcphast/dbmult.f90 \
	srcphast/dump.f90 \
	srcphast/efact.f90 \
	srcphast/ehoftp.f90 \
	srcphast/el1slv.f90 \
	srcphast/elslv.f90 \
	srcphast/error1.f90 \
	srcphast/error2.f90 \
	srcphast/error3.f90 \
	srcphast/error4.f90 \
	srcphast/errprt.f90 \
	srcphast/etom1.f90 \
	srcphast/etom2.f90 \
	srcphast/euslv.f90 \
	srcphast/formr.f90 \
	srcphast/gcgris.f90 \
	srcphast/hunt.f90 \
	srcphast/incidx.f90 \
	srcphast/indx_rewi.f90 \
	srcphast/indx_rewi_bc.f90 \
	srcphast/init1.f90 \
	srcphast/init2_1.f90 \
	srcphast/init2_2.f90 \
	srcphast/init2_3.f90 \
	srcphast/init2_post_ss.f90 \
	srcphast/init3.f90 \
	srcphast/interp.f90 \
	srcphast/irewi.f90 \
	srcphast/ldchar.f90 \
	srcphast/ldci.f90 \
	srcphast/ldcir.f90 \
	srcphast/ldind.f90 \
	srcphast/ldipen.f90 \
	srcphast/ldmar1.f90 \
	srcphast/load_indx_bc.f90 \
	srcphast/lsolv.f90 \
	srcphast/modules.f90 \
	srcphast/mtoijk.f90 \
	srcphast/nintrp.f90 \
	srcphast/openf.F90 \
	srcphast/phast.F90 \
	srcphast/prchar.f90 \
	srcphast/print_control_mod.f90 \
	srcphast/prntar.f90 \
	srcphast/rbord.f90 \
	srcphast/read1.f90 \
	srcphast/read2.f90 \
	srcphast/read3.f90 \
	srcphast/reordr.f90 \
	srcphast/rewi.f90 \
	srcphast/rewi3.f90 \
	srcphast/rfact.f90 \
	srcphast/rfactm.f90 \
	srcphast/rhsn.f90 \
	srcphast/rhsn_ss_flow.f90 \
	srcphast/sbcflo.f90 \
	srcphast/simulate_ss_flow.f90 \
	srcphast/stonb.f90 \
	srcphast/sumcal1.f90 \
	srcphast/sumcal2.f90 \
	srcphast/sumcal_ss_flow.f90 \
	srcphast/terminate_phast.F90 \
	srcphast/tfrds.f90 \
	srcphast/timstp.f90 \
	srcphast/timstp_ss_flow.f90 \
	srcphast/update_print_flags.f90 \
	srcphast/usolv.f90 \
	srcphast/viscos.f90 \
	srcphast/vpsv.f90 \
	srcphast/wbbal.f90 \
	srcphast/wbcflo.f90 \
	srcphast/wellsc.f90 \
	srcphast/wellsc_ss_flow.f90 \
	srcphast/wellsr.f90 \
	srcphast/wellsr_ss_flow.f90 \
	srcphast/welris.f90 \
	srcphast/wfdydz.f90 \
	srcphast/write1.f90 \
	srcphast/write2_1.f90 \
	srcphast/write2_2.f90 \
	srcphast/write3.f90 \
	srcphast/write3_ss_flow.f90 \
	srcphast/write4.f90 \
	srcphast/write5.f90 \
	srcphast/write5_ss_flow.f90 \
	srcphast/write6.f90 \
	srcphast/ifrd.inc \
	srcphast/ifwr.inc \
	srcphast/advection.c \
	srcphast/basic.c \
	srcphast/basicsubs.c \
	srcphast/cl1.c \
	srcphast/hdf.c \
	srcphast/hst.c \
	srcphast/hstsubs.c \
	srcphast/integrate.c \
	srcphast/inverse.c \
	srcphast/isotopes.c \
	srcphast/kinetics.c \
	srcphast/mainsubs.c \
	srcphast/mix.c \
	srcphast/model.c \
	srcphast/output.c \
	srcphast/p2clib.c \
	srcphast/parse.c \
	srcphast/phast_files.c \
	srcphast/phqalloc.c \
	srcphast/prep.c \
	srcphast/print.c \
	srcphast/read.c \
	srcphast/readtr.c \
	srcphast/spread.c \
	srcphast/step.c \
	srcphast/structures.c \
	srcphast/tidy.c \
	srcphast/transport.c \
	srcphast/utilities.c \
	srcphast/global.h \
	srcphast/hst.h \
	srcphast/p2c.h \
	srcphast/phqalloc.h \
	srcphast/cvdense.c \
	srcphast/cvode.c \
	srcphast/dense.c \
	srcphast/nvector.c \
	srcphast/nvector_serial.c \
	srcphast/smalldense.c \
	srcphast/sundialsmath.c \
	srcphast/cvdense.h \
	srcphast/nvector.h \
	srcphast/sundialstypes.h \
	srcphast/cvode.h \
	srcphast/nvector_serial.h \
	srcphast/smalldense.h \
	srcphast/dense.h \
	srcphast/kinetics.h \
	srcphast/sundialsmath.h \
	srcinput/accumulate.c \
	srcinput/check.c \
	srcinput/d4ordr.c \
	srcinput/gpc.c \
	srcinput/main.c \
	srcinput/read.c \
	srcinput/rivers.c \
	srcinput/structures.c \
	srcinput/utilities.c \
	srcinput/wells.c \
	srcinput/write.c \
	srcinput/gpc.h \
	srcinput/hstinpt.h 

DIST_FILES= \
	doc/phast.pdf \
	examples/decay/decay.chem.dat \
	examples/decay/decay.chem.out \
	examples/decay/decay.echo \
	examples/decay/decay.error \
	examples/decay/decay.log \
	examples/decay/decay.O.bal \
	examples/decay/decay.O.bcf \
	examples/decay/decay.O.clog \
	examples/decay/decay.O.head \
	examples/decay/decay.O.kd \
	examples/decay/decay.O.out \
	examples/decay/decay.O.rde \
	examples/decay/decay.O.vel \
	examples/decay/decay.sel \
	examples/decay/decay.trans.dat \
	examples/decay/phast.chem.log \
	examples/decay/phast.dat \
	examples/decay/Phast.tmp \
	\
	examples/kindred4.1/kindred4.1.chem.dat \
	examples/kindred4.1/kindred4.1.chem.out \
	examples/kindred4.1/kindred4.1.echo \
	examples/kindred4.1/kindred4.1.error \
	examples/kindred4.1/kindred4.1.log \
	examples/kindred4.1/kindred4.1.O.bal \
	examples/kindred4.1/kindred4.1.O.bcf \
	examples/kindred4.1/kindred4.1.O.clog \
	examples/kindred4.1/kindred4.1.O.head \
	examples/kindred4.1/kindred4.1.O.kd \
	examples/kindred4.1/kindred4.1.O.out \
	examples/kindred4.1/kindred4.1.O.rde \
	examples/kindred4.1/kindred4.1.O.vel \
	examples/kindred4.1/kindred4.1.sel \
	examples/kindred4.1/kindred4.1.trans.dat \
	examples/kindred4.1/phast.chem.log \
	examples/kindred4.1/phast.dat \
	examples/kindred4.1/Phast.tmp \
	\
	examples/kindred4.4/kindred4.4.chem.dat \
	examples/kindred4.4/kindred4.4.chem.out \
	examples/kindred4.4/kindred4.4.echo \
	examples/kindred4.4/kindred4.4.error \
	examples/kindred4.4/kindred4.4.log \
	examples/kindred4.4/kindred4.4.O.bal \
	examples/kindred4.4/kindred4.4.O.bcf \
	examples/kindred4.4/kindred4.4.O.clog \
	examples/kindred4.4/kindred4.4.O.head \
	examples/kindred4.4/kindred4.4.O.kd \
	examples/kindred4.4/kindred4.4.O.out \
	examples/kindred4.4/kindred4.4.O.rde \
	examples/kindred4.4/kindred4.4.O.vel \
	examples/kindred4.4/kindred4.4.sel \
	examples/kindred4.4/kindred4.4.trans.dat \
	examples/kindred4.4/phast.chem.log \
	examples/kindred4.4/phast.dat \
	examples/kindred4.4/Phast.tmp \
	\
	examples/linear_bc/linear_bc.chem.dat \
	examples/linear_bc/linear_bc.chem.out \
	examples/linear_bc/linear_bc.echo \
	examples/linear_bc/linear_bc.error \
	examples/linear_bc/linear_bc.log \
	examples/linear_bc/linear_bc.O.bal \
	examples/linear_bc/linear_bc.O.bcf \
	examples/linear_bc/linear_bc.O.clog \
	examples/linear_bc/linear_bc.O.head \
	examples/linear_bc/linear_bc.O.kd \
	examples/linear_bc/linear_bc.O.out \
	examples/linear_bc/linear_bc.O.rde \
	examples/linear_bc/linear_bc.O.vel \
	examples/linear_bc/linear_bc.trans.dat \
	examples/linear_bc/phast.chem.log \
	examples/linear_bc/phast.dat \
	examples/linear_bc/Phast.tmp \
	\
	examples/linear_ic/linear_ic.chem.dat \
	examples/linear_ic/linear_ic.chem.out \
	examples/linear_ic/linear_ic.echo \
	examples/linear_ic/linear_ic.error \
	examples/linear_ic/linear_ic.log \
	examples/linear_ic/linear_ic.O.bal \
	examples/linear_ic/linear_ic.O.bcf \
	examples/linear_ic/linear_ic.O.clog \
	examples/linear_ic/linear_ic.O.head \
	examples/linear_ic/linear_ic.O.kd \
	examples/linear_ic/linear_ic.O.out \
	examples/linear_ic/linear_ic.O.rde \
	examples/linear_ic/linear_ic.O.vel \
	examples/linear_ic/linear_ic.trans.dat \
	examples/linear_ic/phast.chem.log \
	examples/linear_ic/phast.dat \
	examples/linear_ic/Phast.tmp \
	\
	examples/ok/ok.chem.dat \
	examples/ok/ok.chem.out \
	examples/ok/ok.echo \
	examples/ok/ok.error \
	examples/ok/ok.log \
	examples/ok/ok.O.bal \
	examples/ok/ok.O.bcf \
	examples/ok/ok.O.clog \
	examples/ok/ok.O.head \
	examples/ok/ok.O.kd \
	examples/ok/ok.O.out \
	examples/ok/ok.O.rde \
	examples/ok/ok.O.vel \
	examples/ok/ok.O.wel \
	examples/ok/ok.P.wel \
	examples/ok/ok.sel \
	examples/ok/ok.sshead.dat \
	examples/ok/ok.trans.dat \
	examples/ok/phast.chem.log \
	examples/ok/phast.dat \
	examples/ok/Phast.tmp \
	\
	examples/phrqex11/phast.chem.log \
	examples/phrqex11/phast.dat \
	examples/phrqex11/Phast.tmp \
	examples/phrqex11/phrqex11.chem.dat \
	examples/phrqex11/phrqex11.chem.out \
	examples/phrqex11/phrqex11.echo \
	examples/phrqex11/phrqex11.error \
	examples/phrqex11/phrqex11.log \
	examples/phrqex11/phrqex11.O.clog \
	examples/phrqex11/phrqex11.O.out \
	examples/phrqex11/phrqex11.O.rde \
	examples/phrqex11/phrqex11.P.head \
	examples/phrqex11/phrqex11.sel \
	examples/phrqex11/phrqex11.trans.dat \
	\
	examples/pulse/phast.chem.log \
	examples/pulse/phast.dat \
	examples/pulse/Phast.tmp \
	examples/pulse/pulse.chem.dat \
	examples/pulse/pulse.chem.out \
	examples/pulse/pulse.echo \
	examples/pulse/pulse.error \
	examples/pulse/pulse.log \
	examples/pulse/pulse.O.clog \
	examples/pulse/pulse.O.kd \
	examples/pulse/pulse.O.out \
	examples/pulse/pulse.O.rde \
	examples/pulse/pulse.O.vel \
	examples/pulse/pulse.sel \
	examples/pulse/pulse.trans.dat \
	\
	examples/radial/phast.chem.log \
	examples/radial/phast.dat \
	examples/radial/Phast.tmp \
	examples/radial/radial.chem.dat \
	examples/radial/radial.chem.out \
	examples/radial/radial.echo \
	examples/radial/radial.error \
	examples/radial/radial.head.dat \
	examples/radial/radial.log \
	examples/radial/radial.O.bal \
	examples/radial/radial.O.bcf \
	examples/radial/radial.O.clog \
	examples/radial/radial.O.head \
	examples/radial/radial.O.kd \
	examples/radial/radial.O.out \
	examples/radial/radial.O.rde \
	examples/radial/radial.O.vel \
	examples/radial/radial.O.wel \
	examples/radial/radial.sel \
	examples/radial/radial.trans.dat \
	\
	examples/river/Phast.tmp \
	examples/river/river.echo \
	examples/river/river.error \
	examples/river/river.log \
	examples/river/river.O.bal \
	examples/river/river.O.bcf \
	examples/river/river.O.clog \
	examples/river/river.O.head \
	examples/river/river.O.kd \
	examples/river/river.O.out \
	examples/river/river.O.rde \
	examples/river/river.O.vel \
	examples/river/river.trans.dat \
	\
	examples/unconf/Phast.tmp \
	examples/unconf/unconf.echo \
	examples/unconf/unconf.error \
	examples/unconf/unconf.log \
	examples/unconf/unconf.O.bal \
	examples/unconf/unconf.O.bcf \
	examples/unconf/unconf.O.clog \
	examples/unconf/unconf.O.head \
	examples/unconf/unconf.O.kd \
	examples/unconf/unconf.O.out \
	examples/unconf/unconf.O.rde \
	examples/unconf/unconf.O.vel \
	examples/unconf/unconf.trans.dat \
	\
	examples/well/Phast.tmp \
	examples/well/well.echo \
	examples/well/well.error \
	examples/well/well.log \
	examples/well/well.O.bal \
	examples/well/well.O.bcf \
	examples/well/well.O.clog \
	examples/well/well.O.head \
	examples/well/well.O.kd \
	examples/well/well.O.out \
	examples/well/well.O.rde \
	examples/well/well.O.vel \
	examples/well/well.O.wel \
	examples/well/well.P.wel \
	examples/well/well.trans.dat \
	\
	database/phast.dat

# -----------------------------------------------------------------------------
# (g) Assign dependents to target on dependency line & link options on command 
#     line. Command line is initiated with a tab. ($@ is an internal macro for 
#     the current target.) 

${PROGRAM} : ${OBJECT_FILES}
#	$(PURIFY) ld -o $@ /opt/SUNWspro/SC3.0.1/lib/crti.o /opt/SUNWspro/SC3.0.1/lib/crt1.o -Y P,/opt/SUNWspro/lib:/opt/SUNWspro/SC3.0.1/lib:/usr/ccs/lib:/usr/lib ${OBJECT_FILES} ${LD_LIB1} ${LD_FLAGS} /opt/SUNWspro/SC3.0.1/lib/libM77.a -lm -L/z/runoff/home2/SUNWspro/SC4.2/lib  -lF77 -lf90 -lsunmath -lm -lc /opt/SUNWspro/SC3.0.1/lib/crtn.o
#	$(PURIFY) ${FC_LD} -o $@ ${OBJECT_FILES} ${LD_LIB1} ${LD_FLAGS}
	echo ${OBJECT_FILES}
	echo End OBJECT_FILES
	${FC} -o $@ ${OBJECT_FILES} ${LD_LIB1} ${LD_FLAGS} 

# -----------------------------------------------------------------------------
# (e, f) SPECIAL TARGET for compiling files containing modules so that
#        module_name.M and module_name.o files are created or
#        updated before all other source code object files. Also, a target
#        is provided for removing object files and the executable. Invoke
#        this target as make CLEAN. (A tab must proceed the /bin/rm.)

modules.o : modules.f90 
	${FC} -c ${FFLAGS} $<
print_control_mod.o : print_control_mod.f90
	${FC} -c ${FFLAGS} $<

clean :
#	/bin/rm *.o ${PROGRAM} *.M core
	/bin/rm *.o ${PROGRAM} *.mod
# -----------------------------------------------------------------------------
# Module dependency list
modules.M:	modules.f90
	${FC} -c ${FFLAGS} $<

##SRC##print_control_mod.M:	print_control_mod.f90
##SRC##	${FC} -c ${FFLAGS} $<

phast.o:	modules.o	print_control_mod.o
abmult.o:	modules.o
aplbce.o: 	modules.o
aplbce_ss_flow.o: 	modules.o
aplbci.o: 	modules.o
armult.o: 	modules.o
asembl.o: 	modules.o
asmslc.o: 	modules.o
asmslp.o: 	modules.o
asmslp_ss_flow.o: 	modules.o
bsode.o: 	modules.o
calc_velocity.o: 	modules.o
closef.o: 	modules.o
coeff.o: 	modules.o
coeff_ss_flow.o: 	modules.o
crsdsp.o: 	modules.o
d4ord.o: 	modules.o
d4zord.o: 	modules.o
dbmult.o: 	modules.o
dump.o: 	modules.o
efact.o: 	modules.o
error1.o:	modules.o
error2.o:	modules.o
error3.o: 	modules.o
error4.o:	modules.o	ifwr.inc
errprt.o: 	modules.o
clog.o:		modules.o
etom1.o:	modules.o
etom2.o:	modules.o
formr.o:	modules.o
gcgris.o:	modules.o	print_control_mod.o
hdf_f.o:        modules.o	print_control_mod.o
indx_rewi.o:	modules.o
indx_rewi_bc.o:	modules.o
init1.o:	modules.o
init2_1.o:	modules.o
init2_2.o:	modules.o
init2_3.o:	modules.o
init2_post_ss.o:	modules.o
init3.o:	modules.o
interp.o:	modules.o
irewi.o:	modules.o
ldchar.o:	modules.o
ldci.o:		modules.o
ldcir.o:	modules.o
ldind.o:	modules.o
ldipen.o:	modules.o
ldmar1.o:	modules.o
load_indx_bc.o:	modules.o
lsolv.o:	modules.o
openf.o:	modules.o
prchar.o:	modules.o
prntar.o:	modules.o
rbord.o:	modules.o
read1.o:	modules.o
read2.o:	modules.o 	ifrd.inc
read3.o:	modules.o
reordr.o:	modules.o
rewi.o:		modules.o
rewi3.o:	modules.o
rfact.o:	modules.o
rfactm.o:	modules.o
rhsn.o:		modules.o
rhsn_ss_flow.o:		modules.o
sbcflo.o:	modules.o
simulate_ss_flow.o:	modules.o
sumcal1.o:	modules.o
sumcal2.o:	modules.o
sumcal_ss_flow.o:	modules.o
terminate_phast.o: modules.o
tfrds.o:	modules.o
timstp.o:	modules.o	print_control_mod.o
timstp_ss_flow.o:	modules.o	print_control_mod.o
update_print_flags.o:	modules.o	
usolv.o:	modules.o
viscos.o:	modules.o
wbbal.o:	modules.o
wbcflo.o:	modules.o
wellsc.o:	modules.o
wellsc_ss_flow.o:	modules.o
wellsr.o:	modules.o
wellsr_ss_flow.o:	modules.o
welris.o:	modules.o
wfdydz.o:	modules.o
write1.o:	modules.o
write2_1.o:	modules.o	ifwr.inc
write2_2.o:	modules.o	ifwr.inc
write3.o:	modules.o	ifwr.inc
write3_ss_flow.o:	modules.o	ifwr.inc
write4.o:	modules.o	ifwr.inc	print_control_mod.o
write5.o:	modules.o	ifwr.inc	print_control_mod.o
write5_ss_flow.o:	modules.o	ifwr.inc	print_control_mod.o
write6.o:	modules.o	ifwr.inc	print_control_mod.o

cvdense.h: cvode.h sundialstypes.h dense.h nvector.h
	touch cvdense.h

cvode.h: sundialstypes.h nvector.h 
	touch cvode.h

dense.h: smalldense.h
	touch dense.h

global.h: phrqtype.h
	touch global.h

nvector.h: sundialstypes.h
	touch nvector.h

nvector_serial.h: sundialstypes.h
	touch nvector_serial.h

sundialstypes.h: phrqtype.h
	touch sundialstypes.h

advection.o: advection.c global.h phqalloc.h output.h phrqproto.h

basic.o: basic.c global.h phqalloc.h output.h phrqproto.h p2c.h

basicsubs.o: basicsubs.c global.h phqalloc.h output.h phrqproto.h

cl1.o: cl1.c phqalloc.h output.h phrqtype.h

cvdense.o: cvdense.c cvdense.h cvode.h dense.h sundialstypes.h nvector.h sundialsmath.h output.h

cvode.o: cvode.c cvode.h sundialstypes.h nvector.h sundialsmath.h output.h kinetics.h

dense.o: dense.c sundialstypes.h sundialsmath.h dense.h smalldense.h output.h

input.o: input.c global.h input.h output.h phrqproto.h phqalloc.h 

integrate.o: integrate.c global.h phqalloc.h output.h phrqproto.h 

inverse.o: inverse.c global.h phqalloc.h output.h phrqproto.h 

isotopes.o: isotopes.c global.h phqalloc.h output.h phrqproto.h

kinetics.o: kinetics.c global.h phqalloc.h output.h phrqproto.h sundialstypes.h cvode.h cvdense.h nvector_serial.h dense.h kinetics.h

mainsubs.o: mainsubs.c global.h phqalloc.h output.h phrqproto.h input.h 

model.o: model.c global.h phqalloc.h output.h phrqproto.h 

nvector.o: nvector.c nvector.h output.h 

nvector_serial.o: nvector_serial.c nvector_serial.h  sundialstypes.h sundialsmath.h output.h

output.o: output.c global.h output.h phrqproto.h phqalloc.h 

p2clib.o: p2clib.c p2c.h output.h

parse.o: parse.c global.h phqalloc.h output.h phrqproto.h

phast_files.o: phast_files.c global.h phqalloc.h output.h phrqproto.h input.h

phreeqc_files.o: phreeqc_files.c global.h phqalloc.h output.h phrqproto.h input.h

phqalloc.o: phqalloc.c global.h output.h

prep.o: prep.c global.h phqalloc.h output.h phrqproto.h

print.o: print.c global.h phqalloc.h output.h phrqproto.h

read.o: read.c global.h phqalloc.h output.h phrqproto.h 

readtr.o: readtr.c global.h phqalloc.h output.h phrqproto.h 

smalldense.o: smalldense.c smalldense.h sundialstypes.h sundialsmath.h output.h

spread.o: spread.c global.h phqalloc.h output.h phrqproto.h

step.o: step.c global.h phqalloc.h output.h phrqproto.h

structures.o: structures.c global.h phqalloc.h output.h phrqproto.h 

sundialsmath.o: sundialsmath.c sundialsmath.h sundialstypes.h output.h

tally.o: tally.c global.h phqalloc.h output.h phrqproto.h

tidy.o: tidy.c global.h phqalloc.h output.h phrqproto.h

transport.o: transport.c global.h phqalloc.h output.h phrqproto.h

utilities.o: utilities.c global.h phqalloc.h output.h phrqproto.h

merge.o: merge.c global.h phqalloc.h hst.h output.h phastproto.h

mix.o: mix.c global.h hst.h phqalloc.h output.h phastproto.h

hdf.o:hdf.c  global.h hst.h phqalloc.h output.h phastproto.h

hst.o: hst.c  global.h hst.h phqalloc.h output.h phastproto.h

hstsubs.o: hstsubs.c  global.h hst.h phqalloc.h output.h phastproto.h

dist: 
	rm -f $(PROGRAM).rev
	co -l $(PROGRAM).rev; rlog -h README > $(PROGRAM).rev
	cd $(TOPDIR); for FILE in $(FILES); do rlog -h $$FILE >> srcphast/$(PROGRAM).rev; done
	ci -q -mUpdate $(PROGRAM).rev
	co -l $(PROGRAM).rev
	rm -f Makefile.internaldist; cp Makefile Makefile.internaldist
	make -C $(TOPDIR) -f srcphast/Makefile.internaldist internaldist VERSION=$(VERSION)
	rm -f Makefile.internaldist
	echo 
	echo Done.

internaldist: clean_dist dist_linux dist_sun
	cp $(DIST_DIR)/$(PROGRAM)$(VERSION).Linux.tar.gz ../ftp
	cp $(DIST_DIR)/$(PROGRAM)$(VERSION).Solaris.tar.gz ../ftp

dist_linux: $(FILES)
	cp srcphast/$(PROGRAM).rev linux/srcphast
	cd linux; tar -cf $(PROGRAM).tar srcphast/$(PROGRAM).rev 
	cd linux; for FILE in $(DIST_FILES); do tar -rf $(PROGRAM).tar $$FILE; done
	mv linux/$(PROGRAM).tar $(PROGRAM).tar
	rm -rf $(PROGRAM)$(VERSION)
	mkdir $(PROGRAM)$(VERSION)
	mv $(PROGRAM).tar $(PROGRAM)$(VERSION)
	cd $(PROGRAM)$(VERSION); tar -xf $(PROGRAM).tar; rm $(PROGRAM).tar
	cp srcphast/README $(PROGRAM)$(VERSION)/README
	cp linux/srcphast/$(PROGRAM) $(PROGRAM)$(VERSION)/$(PROGRAM)
	cp linux/srcinput/$(PROGRAM1) $(PROGRAM)$(VERSION)/$(PROGRAM1)
	tar -czf $(PROGRAM).Linux.tar.gz $(PROGRAM)$(VERSION)
	echo $(PROGRAM).Linux.tar.gz $(DIST_DIR)/$(PROGRAM)$(VERSION).Linux.tar.gz
	mv $(PROGRAM).Linux.tar.gz $(DIST_DIR)/$(PROGRAM)$(VERSION).Linux.tar.gz
	echo $(PROGRAM)$(VERSION).Linux.tar.gz saved in $(DIST_DIR).
	rm -rf $(PROGRAM)$(VERSION)


dist_sun: $(FILES)
	cp srcphast/$(PROGRAM).rev sun/srcphast
	cd sun; tar -cf $(PROGRAM).tar srcphast/$(PROGRAM).rev 
	cd sun; for FILE in $(DIST_FILES); do tar -rf $(PROGRAM).tar $$FILE; done
	mv sun/$(PROGRAM).tar $(PROGRAM).tar
	rm -rf $(PROGRAM)$(VERSION)
	mkdir $(PROGRAM)$(VERSION)
	mv $(PROGRAM).tar $(PROGRAM)$(VERSION)
	cd $(PROGRAM)$(VERSION); tar -xf $(PROGRAM).tar; rm $(PROGRAM).tar
	cp srcphast/README $(PROGRAM)$(VERSION)/README
	cp sun/srcphast/$(PROGRAM) $(PROGRAM)$(VERSION)/$(PROGRAM)
	cp sun/srcinput/$(PROGRAM1) $(PROGRAM)$(VERSION)/$(PROGRAM1)
	tar -czf $(PROGRAM).Solaris.tar.gz $(PROGRAM)$(VERSION)
	mv $(PROGRAM).Solaris.tar.gz $(DIST_DIR)/$(PROGRAM)$(VERSION).Solaris.tar.gz
	echo $(PROGRAM)$(VERSION).Solaris.tar.gz saved in $(DIST_DIR).
	rm -rf $(PROGRAM)$(VERSION)

clean_dist:
	rm -f $(DIST_DIR)/README.TXT
	rm -f $(DIST_DIR)/$(PROGRAM)* 
	echo Removed README.TXT and tar.gz files for $(PROGRAM) from $(DIST_DIR).

sun: clean_sun 
        # Make phast
	cd $(TOPDIR)/srcphast; cp Makefile *.f90 *.inc *.c *.h $(TOPDIR)/sun/srcphast
	rsh  $(SUN_MACHINE) "cd /z/parkplace/home/dlpark/parkplace/phast/sun/srcphast; \
		make modules.o FC=$(FC_SUN) FFLAGS=$(FFLAGS_SUN)"
	rsh $(SUN_MACHINE) "cd /z/parkplace/home/dlpark/parkplace/phast/sun/srcphast; \
		make CC=$(CC_SUN) CFLAGS=$(CFLAGS_SUN) FC=$(FC_SUN) FFLAGS=$(FFLAGS_SUN)"
        # Make phastinput
	cd $(TOPDIR)/srcinput; cp Makefile *.c *.h $(TOPDIR)/sun/srcinput
	rsh $(SUN_MACHINE) "cd /z/parkplace/home/dlpark/parkplace/phast/sun/srcinput; \
		make CC=$(CC_SUN) CCFLAGS=$(CFLAGS_SUN) "

clean_sun:
	cd $(TOPDIR)/sun/srcphast; rm -f *.f90 *.inc *.c *.h *.o $(PROGRAM) Makefile
	cd $(TOPDIR)/sun/srcinput; rm -f *.c *.h *.o $(PROGRAM1) Makefile

linux: clean_linux
        # Make phast
	cd $(TOPDIR)/srcphast; cp Makefile *.f90 *.inc *.c *.h $(TOPDIR)/linux/srcphast
	rsh stoch "cd /z/parkplace/home/dlpark/parkplace/phast/linux/srcphast; \
		make modules.o FC=$(FC_LINUX) FFLAGS=$(FFLAGS_LINUX)"
	rsh stoch "cd /z/parkplace/home/dlpark/parkplace/phast/linux/srcphast; \
		make CC=$(CC_LINUX) CFLAGS=$(CFLAGS_LINUX) FC=$(FC_LINUX) FFLAGS=$(FFLAGS_LINUX) LD_FLAGS=$(LD_FLAGS_LINUX)"
        # Make phastinput
	cd $(TOPDIR)/srcinput; cp Makefile *.c *.h $(TOPDIR)/linux/srcinput
	rsh stoch "cd /z/parkplace/home/dlpark/parkplace/phast/linux/srcinput; \
		make CC=$(CC_LINUX) CCFLAGS=$(CFLAGS_LINUX)"

clean_linux:
	cd $(TOPDIR)/linux/srcphast; rm -f *.f90 *.inc *.c *.h *.o $(PROGRAM) Makefile
	cd $(TOPDIR)/linux/srcinput; rm -f *.c *.h *.o $(PROGRAM1) Makefile

diff:
	rm -rf $(TOPDIR)/linux/doc; cp -r $(TOPDIR)/doc $(TOPDIR)/linux
	rm -rf $(TOPDIR)/linux/database; cp -r $(TOPDIR)/database $(TOPDIR)/linux
	rm -f $(TOPDIR)/linux/srcphast/README; cp $(TOPDIR)/srcphast/README $(TOPDIR)/linux/srcphast
	rm -rf $(TOPDIR)/sun/doc; cp -r $(TOPDIR)/doc $(TOPDIR)/sun
	rm -rf $(TOPDIR)/sun/database; cp -r $(TOPDIR)/database $(TOPDIR)/sun
	rm -f $(TOPDIR)/sun/srcphast/README; cp $(TOPDIR)/srcphast/README $(TOPDIR)/sun/srcphast
	cd $(TOPDIR); for FILE in $(FILES); do rcsdiff $$FILE ; done
	cd $(TOPDIR); for FILE in $(DIST_FILES); do rcsdiff $$FILE ; done
	cd $(TOPDIR)/linux; for FILE in $(DIST_FILES); do rcsdiff $$FILE; done
	cd $(TOPDIR)/sun; for FILE in $(DIST_FILES); do rcsdiff $$FILE ; done
	rcsdiff README Makefile

win:
	rm -rf $(TOPDIR)/linux/doc; cp -r $(TOPDIR)/doc $(TOPDIR)/linux
	rm -rf $(TOPDIR)/linux/database; cp -r $(TOPDIR)/database $(TOPDIR)/linux
	rm -f $(TOPDIR)/linux/srcphast/README; cp $(TOPDIR)/srcphast/README $(TOPDIR)/linux/srcphast
	cd $(TOPDIR)/linux; tar -czf $(PROGRAM).Windows.tar.gz  $(FILES) srcinput/getopt* srcinput/tailor.h srcphast/README $(DIST_FILES); mv $(TOPDIR)/linux/*.gz $(TOPDIR)


dist_win: $(FILES)
	for FILE in $(DIST_FILES); do tar -rf $(PROGRAM).tar $$FILE; done
	rm -rf $(PROGRAM)$(VERSION)
	mkdir $(PROGRAM)$(VERSION)
	cd $(PROGRAM)$(VERSION); mkdir $(PROGRAM)$(VERSION)
	mv $(PROGRAM).tar $(PROGRAM)$(VERSION)/$(PROGRAM)$(VERSION)
	cd $(PROGRAM)$(VERSION)/$(PROGRAM)$(VERSION); tar -xf $(PROGRAM).tar; rm $(PROGRAM).tar
	cp srcphast/README $(PROGRAM)$(VERSION)/$(PROGRAM)$(VERSION)/README
	cp srcphast/release/$(PROGRAM).exe $(PROGRAM)$(VERSION)/$(PROGRAM)$(VERSION)
	cp srcinput/release/$(PROGRAM1).exe $(PROGRAM)$(VERSION)/$(PROGRAM)$(VERSION)
	cp database/phast.dat $(PROGRAM)$(VERSION)/$(PROGRAM)$(VERSION)
#	tar -czf $(PROGRAM).Solaris.tar.gz $(PROGRAM)$(VERSION)
#	mv $(PROGRAM).Solaris.tar.gz $(DIST_DIR)/$(PROGRAM)$(VERSION).Solaris.tar.gz
	echo $(PROGRAM)$(VERSION) ready to be zipped in $(DIST_DIR).
#	rm -rf $(PROGRAM)$(VERSION)

co:
	co $(SRCFILES)

# =============================================================================
# End of makefile.
# =============================================================================
