 
# Makefile for PHAST
#
# Fortran 90 version
#
# =============================================================================
# Significant suffixes [assuming Fortran 90 (.f90)  source code]:

TOPDIR = ..
PROGRAM = phast
PROGRAM1 = phastinput
.SUFFIXES : .o .f .F90 .f90 .c 

# -----------------------------------------------------------------------------
.f90.o :
	${FC} -c ${FFLAGS} $<
.F90.o :
	${FC} -c ${FFLAGS} $< -o $@
.c.o :
	${CC} ${CFLAGS} -c -o $@ $<

#hdf options
###HDF5_ROOT=/z/lobo/home/charlton/hdf5
HDF5_ROOT=/z/parkplace/usr
#HDF5_INCLUDES= -I${HDF5_ROOT}/include
#HDF5_INCLUDES= -I/z/parkplace/home/dlpark/include
#HDF5_INCLUDES= -I/z/lobo/home/charlton/hdf5/include
#HDF5_LIBS=${HDF5_ROOT}/lib/libhdf5.a -lz -lpthread
HDF5_INCLUDES=-I$(HDF5_ROOT)/include
HDF5_LIBS=${HDF5_ROOT}/lib/libhdf5.a -lz -lpthread
EFENCE_LIB=-L/z/parkplace/home/dlpark/packages/efence

DEFINE_HDF=-DHDF5_CREATE
DEFINE_MPI=-DUSE_MPI
DEFINE_MERGE=-DMERGE_FILES

ifeq ($(CFG), MPI_LAHEY)
  DEFINES      = $(DEFINE_HDF) $(DEFINE_MPI) $(DEFINE_MERGE) -DNDEBUG
  VPATH        = ..:../phreeqc
  LAMHF77      = /z/lobo/usr/local/lf9562/bin/lf95
  export LAMHF77
  FC           = hf77
  FFLAGS       = -O $(DEFINES)
  CC           = hcc
  CFLAGS       = -Wall -pedantic -O3 $(DEFINES) $(HDF5_INCLUDES)
  OBJECT_FILES = $(COMMON_FOBJS) $(COMMON_COBJS) $(MPI_OBJS) $(HDF_OBJS) $(MERGE_OBJS)
  LD_FLAGS     = -static-flib  -lm ${HDF5_LIBS} 
endif

ifeq ($(CFG), MPI_LAHEY_DEBUG)
  DEFINES      = $(DEFINE_HDF) $(DEFINE_MPI) $(DEFINE_MERGE)
  VPATH        = ..:../phreeqc
  LAMHF77      = /z/lobo/usr/local/lf9562/bin/lf95
  export LAMHF77
  FC           = hf77
  FFLAGS       = -g --chkglobal --warn --info $(DEFINES)
  CC           = hcc
  CFLAGS       = -Wall -pedantic -g $(DEFINES)
  OBJECT_FILES = $(COMMON_FOBJS) $(COMMON_COBJS) $(MPI_OBJS) $(HDF_OBJS) $(MERGE_OBJS)
  LD_FLAGS     = -static-flib -lm ${HDF5_LIBS} 
endif

ifeq ($(CFG), SERIAL_LAHEY)
  DEFINES      = $(DEFINE_HDF) -DNDEBUG
  VPATH        = ..:../phreeqc
  LAMHF77      = /z/lobo/usr/local/lf9562/bin/lf95
  export LAMHF77
  FC           = hf77
  FFLAGS       = -g $(DEFINES)
  CC           = hcc
  CFLAGS       = -Wall -pedantic -g $(DEFINES) $(HDF5_INCLUDES)
  OBJECT_FILES = $(COMMON_FOBJS) $(COMMON_COBJS) $(HDF_OBJS)
  LD_FLAGS     = -static-flib -lm ${HDF5_LIBS} 
##LD_FLAGS     = -static -L/z/lobo/usr/lib -lm ${HDF5_LIBS} ## this works with HDF5_ROOT=/z/lobo/home/charlton/hdf5
endif

ifeq ($(CFG), SERIAL_LAHEY_DEBUG)
  DEFINES      = $(DEFINE_HDF) 
  VPATH        = ..:../phreeqc
  LAMHF77      = /z/lobo/usr/local/lf9562/bin/lf95
  export LAMHF77
  FC           = hf77
  FFLAGS       = -g --chkglobal --warn --info $(DEFINES)
#   FFLAGS       = -g --chk a,e,s,u --warn --info $(DEFINES)
#  FFLAGS       = -g --warn --info $(DEFINES)
  CC           = hcc
  CFLAGS       = -Wall -pedantic -g $(DEFINES)
  OBJECT_FILES = $(COMMON_FOBJS) $(COMMON_COBJS) $(HDF_OBJS)
  LD_FLAGS     = -static-flib -lm ${HDF5_LIBS} 
endif


ifeq ($(CFG), MPI_ABSOFT)
  DEFINES      = $(DEFINE_HDF) $(DEFINE_MPI) $(DEFINE_MERGE) -DNDEBUG  
  VPATH        = ..:../phreeqc
  LAMHF77      = /z/parkplace/usr/absoft/bin/f90
  export LAMHF77
  NLSPATH      = /z/parkplace/usr/absoft/lib/nls/cf90
  FC           = hf77
  FDEBUG       = -O -en  # -C
  FMISC        = -YEXT_NAMES=LCS -s -B108 -YCFRL=1 -trap=DIVBYZERO,OVERFLOW
  FFLAGS       = $(FDEBUG) $(FMISC) $(DEFINES)
  CC           = hcc
  CFLAGS       = -Wall -pedantic -O3 $(DEFINES) $(HDF5_INCLUDES)
  OBJECT_FILES = $(COMMON_FOBJS) $(COMMON_COBJS) $(MPI_OBJS) $(HDF_OBJS) $(MERGE_OBJS)
  LD_FLAGS     = -lm ${HDF5_LIBS} -L/z/parkplace/usr/absoft/lib 
endif

ifeq ($(CFG), MPI_ABSOFT_DEBUG)
  DEFINES      = $(DEFINE_HDF) $(DEFINE_MPI) $(DEFINE_MERGE)
  VPATH        = ..:../phreeqc
  LAMHF77      = /z/parkplace/usr/absoft/bin/f90
  export LAMHF77
  NLSPATH      = /z/parkplace/usr/absoft/lib/nls/cf90
  FC           = hf77
  FDEBUG       = -g -en  # -C
  FMISC        = -YEXT_NAMES=LCS -s -B108 -YCFRL=1 -trap=DIVBYZERO,OVERFLOW
  FFLAGS       = $(FDEBUG) $(FMISC) $(DEFINES)
  CC           = hcc
  CFLAGS       = -Wall -pedantic -ansi -g $(DEFINES) $(HDF5_INCLUDES)# -Wconversion 
  OBJECT_FILES = $(COMMON_FOBJS) $(COMMON_COBJS) $(MPI_OBJS) $(HDF_OBJS) $(MERGE_OBJS)
  LD_FLAGS     = -lm ${HDF5_LIBS} -L/z/parkplace/usr/absoft/lib # ${EFENCE_LIB} -lefence
endif

ifeq ($(CFG), SERIAL_ABSOFT)
  DEFINES      = $(DEFINE_HDF) -DNDEBUG 
  VPATH        = ..:../phreeqc
  NLSPATH      = /z/parkplace/usr/absoft/lib/nls/cf90
  FC           = /z/parkplace/usr/absoft/bin/f90
  FDEBUG       = -O -en  # -C
  FMISC        = -YEXT_NAMES=LCS -s -B108 -YCFRL=1 -trap=DIVBYZERO,OVERFLOW
  FFLAGS       = $(FDEBUG) $(FMISC) $(DEFINES)
  CC           = gcc
  CFLAGS       = -Wall -pedantic -O3 $(DEFINES) $(HDF5_INCLUDES)
  OBJECT_FILES = $(COMMON_FOBJS) $(COMMON_COBJS) $(HDF_OBJS) 
  LD_FLAGS     = -lm ${HDF5_LIBS} -L/z/parkplace/usr/absoft/lib
endif

ifeq ($(CFG), SERIAL_ABSOFT_DEBUG)
  DEFINES      = $(DEFINE_HDF)
  VPATH        = ..:../phreeqc
  NLSPATH      = /z/parkplace/usr/absoft/lib/nls/cf90
  FC           = /z/parkplace/usr/absoft/bin/f90
  FDEBUG       = -g -en  # -C
  FMISC        = -YEXT_NAMES=LCS -s -B108 -YCFRL=1 -trap=DIVBYZERO,OVERFLOW
  FFLAGS       = $(FDEBUG) $(FMISC) $(DEFINES)
  CC           = gcc
  CFLAGS       = -Wall -g $(DEFINES) $(HDF5_INCLUDES)
  OBJECT_FILES = $(COMMON_FOBJS) $(COMMON_COBJS) $(HDF_OBJS) 
  LD_FLAGS     = -lm ${HDF5_LIBS} -L/z/parkplace/usr/absoft/lib # ${EFENCE_LIB} -lefence
endif

ifeq ($(CFG), SERIAL_SUN)
  HDF5_ROOT    = /z/sunarcolkr/home/klkipp/local
  HDF5_LIBS    = ${HDF5_ROOT}/lib/libhdf5.a -lz
  DEFINES      = $(DEFINE_HDF) -DNDEBUG 
  VPATH        = ..:../phreeqc
  FC           = /opt/SUNWspro/bin/f90-2.0
  FFLAGS       = -fast -ftrap=common $(DEFINES)
  CC		= /opt/SUNWspro/bin/cc
  CFLAGS       = -fast $(DEFINES) -I/z/sunarcolkr/home/klkipp/local/include
  OBJECT_FILES = $(COMMON_FOBJS) $(COMMON_COBJS) $(HDF_OBJS)
  LD_FLAGS     = -dn /z/sunarcolkr/home/klkipp/local/lib/libhdf5.a -L/z/sunarcolkr/home/klkipp/local/hdf/lib -L/z/sunarcolkr/usr/local/lib  -lz -v -lm
endif

ifeq ($(CFG), SERIAL_SUN_DEBUG)
  HDF5_ROOT    = /z/sunarcolkr/home/klkipp/local
  HDF5_LIBS    = ${HDF5_ROOT}/lib/libhdf5.a -lz
  DEFINES      = $(DEFINE_HDF)
  VPATH        = ..:../phreeqc
  FC           = /opt/SUNWspro/bin/f90-2.0
  FFLAGS       = -g -C -xtarget=native -ftrap=common $(DEFINES)
  CC		= /opt/SUNWspro/bin/cc
  CFLAGS       = -fast $(DEFINES) -I/z/sunarcolkr/home/klkipp/local/include
  OBJECT_FILES = $(COMMON_FOBJS) $(COMMON_COBJS) $(HDF_OBJS)
  LD_FLAGS     = -dn /z/sunarcolkr/home/klkipp/local/lib/libhdf5.a -L/z/sunarcolkr/home/klkipp/local/hdf/lib -L/z/sunarcolkr/usr/local/lib  -lz -v -lm
endif


# -----------------------------------------------------------------------------
# (d) Create expected object file list, with .o extension:     [TARGETS OF PRE-
#     REQUISITE (.f90,.f) SOURCE FILES]
#

COMMON_COBJS =  advection.o basic.o basicsubs.o cl1.o input.o integrate.o inverse.o \
	        isotopes.o kinetics.o mainsubs.o output.o model.o p2clib.o parse.o \
		phqalloc.o prep.o print.o read.o readtr.o spread.o step.o structures.o \
		tally.o tidy.o transport.o utilities.o \
		cvdense.o cvode.o dense.o nvector.o nvector_serial.o smalldense.o sundialsmath.o \
		hst.o hstsubs.o mix.o phast_files.o 

COMMON_FOBJS =	abmult.o aplbce.o aplbce_ss_flow.o aplbci.o armult.o asembl.o\
		asmslc.o asmslp.o asmslp_ss_flow.o bsode.o calcc.o calc_velocity.o clog.o closef.o\
		coeff.o coeff_ss_flow.o crsdsp.o d4ord.o d4zord.o dbmult.o dump.o\
		efact.o ehoftp.o el1slv.o elslv.o error1.o error2.o error3.o error4.o\
		errprt.o etom1.o etom2.o euslv.o formr.o gcgris.o hunt.o incidx.o\
		indx_rewi_bc.o indx_rewi.o init1.o init2_1.o init2_2.o init2_3.o\
		init2_post_ss.o init3.o interp.o irewi.o ldchar.o ldci.o ldcir.o\
		ldind.o ldipen.o ldmar1.o load_indx_bc.o lsolv.o modules.o mtoijk.o\
		nintrp.o openf.o phast.o prchar.o print_control_mod.o prntar.o rbord.o\
		read1.o read2.o read3.o reordr.o rewi3.o rewi.o rfact.o rfactm.o\
		rhsn.o rhsn_ss_flow.o sbcflo.o simulate_ss_flow.o stonb.o sumcal1.o sumcal2.o \
		sumcal_ss_flow.o terminate_phast.o tfrds.o timstp.o timstp_ss_flow.o\
		update_print_flags.o\
		usolv.o viscos.o vpsv.o wbbal.o wbcflo.o wellsc.o wellsc_ss_flow.o\
		wellsr.o wellsr_ss_flow.o welris.o wfdydz.o write1.o write2_1.o write2_2.o write3.o\
		write3_ss_flow.o write4.o write5.o write5_ss_flow.o write6.o 

HDF_OBJS     =  hdf.o hdf_f.o

MERGE_OBJS   =	merge.o

MPI_OBJS     =	mpimod.o


# Prevent error before make is recursively invoked
DISTFILE=foo

# Locations to save compressed tar file for distribution
DIST_DIR=/z/parkplace/home/dlpark/temp

# -----------------------------------------------------------------------------
# (g) Assign dependents to target on dependency line & link options on command 
#     line. Command line is initiated with a tab. ($@ is an internal macro for 
#     the current target.) 

${PROGRAM} : ${OBJECT_FILES}
#	$(PURIFY) ld -o $@ /opt/SUNWspro/SC3.0.1/lib/crti.o /opt/SUNWspro/SC3.0.1/lib/crt1.o -Y P,/opt/SUNWspro/lib:/opt/SUNWspro/SC3.0.1/lib:/usr/ccs/lib:/usr/lib ${OBJECT_FILES} ${LD_LIB1} ${LD_FLAGS} /opt/SUNWspro/SC3.0.1/lib/libM77.a -lm -L/z/runoff/home2/SUNWspro/SC4.2/lib  -lF77 -lf90 -lsunmath -lm -lc /opt/SUNWspro/SC3.0.1/lib/crtn.o
#	$(PURIFY) ${FC_LD} -o $@ ${OBJECT_FILES} ${LD_LIB1} ${LD_FLAGS}
	${FC} -o $@ ${OBJECT_FILES} ${LD_LIB1} ${LD_FLAGS} 

# -----------------------------------------------------------------------------
# (e, f) SPECIAL TARGET for compiling files containing modules so that
#        module_name.M and module_name.o files are created or
#        updated before all other source code object files. Also, a target
#        is provided for removing object files and the executable. Invoke
#        this target as make CLEAN. (A tab must proceed the /bin/rm.)

modules.o : modules.f90 
	${FC} -c ${FFLAGS} $<
print_control_mod.o : print_control_mod.f90
	${FC} -c ${FFLAGS} $<

clean :
#	/bin/rm *.o ${PROGRAM} *.M core
	/bin/rm *.o ${PROGRAM} *.mod
# -----------------------------------------------------------------------------
# Module dependency list
modules.M:	modules.f90
	${FC} -c ${FFLAGS} $<

##SRC##print_control_mod.M:	print_control_mod.f90
##SRC##	${FC} -c ${FFLAGS} $<

phast.o:	modules.o	print_control_mod.o
abmult.o:	modules.o
aplbce.o: 	modules.o
aplbce_ss_flow.o: 	modules.o
aplbci.o: 	modules.o
armult.o: 	modules.o
asembl.o: 	modules.o
asmslc.o: 	modules.o
asmslp.o: 	modules.o
asmslp_ss_flow.o: 	modules.o
bsode.o: 	modules.o
calc_velocity.o: 	modules.o
closef.o: 	modules.o
coeff.o: 	modules.o
coeff_ss_flow.o: 	modules.o
crsdsp.o: 	modules.o
d4ord.o: 	modules.o
d4zord.o: 	modules.o
dbmult.o: 	modules.o
dump.o: 	modules.o
efact.o: 	modules.o
error1.o:	modules.o
error2.o:	modules.o
error3.o: 	modules.o
error4.o:	modules.o	ifwr.inc
errprt.o: 	modules.o
clog.o:		modules.o
etom1.o:	modules.o
etom2.o:	modules.o
formr.o:	modules.o
gcgris.o:	modules.o	print_control_mod.o
hdf_f.o:        modules.o	print_control_mod.o
indx_rewi.o:	modules.o
indx_rewi_bc.o:	modules.o
init1.o:	modules.o
init2_1.o:	modules.o
init2_2.o:	modules.o
init2_3.o:	modules.o
init2_post_ss.o:	modules.o
init3.o:	modules.o
interp.o:	modules.o
irewi.o:	modules.o
ldchar.o:	modules.o
ldci.o:		modules.o
ldcir.o:	modules.o
ldind.o:	modules.o
ldipen.o:	modules.o
ldmar1.o:	modules.o
load_indx_bc.o:	modules.o
lsolv.o:	modules.o
openf.o:	modules.o
prchar.o:	modules.o
prntar.o:	modules.o
rbord.o:	modules.o
read1.o:	modules.o
read2.o:	modules.o 	ifrd.inc
read3.o:	modules.o
reordr.o:	modules.o
rewi.o:		modules.o
rewi3.o:	modules.o
rfact.o:	modules.o
rfactm.o:	modules.o
rhsn.o:		modules.o
rhsn_ss_flow.o:		modules.o
sbcflo.o:	modules.o
simulate_ss_flow.o:	modules.o
sumcal1.o:	modules.o
sumcal2.o:	modules.o
sumcal_ss_flow.o:	modules.o
terminate_phast.o: modules.o
tfrds.o:	modules.o
timstp.o:	modules.o	print_control_mod.o
timstp_ss_flow.o:	modules.o	print_control_mod.o
update_print_flags.o:	modules.o	
usolv.o:	modules.o
viscos.o:	modules.o
wbbal.o:	modules.o
wbcflo.o:	modules.o
wellsc.o:	modules.o
wellsc_ss_flow.o:	modules.o
wellsr.o:	modules.o
wellsr_ss_flow.o:	modules.o
welris.o:	modules.o
wfdydz.o:	modules.o
write1.o:	modules.o
write2_1.o:	modules.o	ifwr.inc
write2_2.o:	modules.o	ifwr.inc
write3.o:	modules.o	ifwr.inc
write3_ss_flow.o:	modules.o	ifwr.inc
write4.o:	modules.o	ifwr.inc	print_control_mod.o
write5.o:	modules.o	ifwr.inc	print_control_mod.o
write5_ss_flow.o:	modules.o	ifwr.inc	print_control_mod.o
write6.o:	modules.o	ifwr.inc	print_control_mod.o

cvdense.h: cvode.h sundialstypes.h dense.h nvector.h
	touch cvdense.h

cvode.h: sundialstypes.h nvector.h 
	touch cvode.h

dense.h: smalldense.h
	touch dense.h

global.h: phrqtype.h
	touch global.h

nvector.h: sundialstypes.h
	touch nvector.h

nvector_serial.h: sundialstypes.h
	touch nvector_serial.h

sundialstypes.h: phrqtype.h
	touch sundialstypes.h

advection.o: advection.c global.h phqalloc.h output.h phrqproto.h

basic.o: basic.c global.h phqalloc.h output.h phrqproto.h p2c.h

basicsubs.o: basicsubs.c global.h phqalloc.h output.h phrqproto.h

cl1.o: cl1.c phqalloc.h output.h phrqtype.h

cvdense.o: cvdense.c cvdense.h cvode.h dense.h sundialstypes.h nvector.h sundialsmath.h output.h

cvode.o: cvode.c cvode.h sundialstypes.h nvector.h sundialsmath.h output.h kinetics.h

dense.o: dense.c sundialstypes.h sundialsmath.h dense.h smalldense.h output.h

input.o: input.c global.h input.h output.h phrqproto.h phqalloc.h 

integrate.o: integrate.c global.h phqalloc.h output.h phrqproto.h 

inverse.o: inverse.c global.h phqalloc.h output.h phrqproto.h 

isotopes.o: isotopes.c global.h phqalloc.h output.h phrqproto.h

kinetics.o: kinetics.c global.h phqalloc.h output.h phrqproto.h sundialstypes.h cvode.h cvdense.h nvector_serial.h dense.h kinetics.h

mainsubs.o: mainsubs.c global.h phqalloc.h output.h phrqproto.h input.h 

model.o: model.c global.h phqalloc.h output.h phrqproto.h 

nvector.o: nvector.c nvector.h output.h 

nvector_serial.o: nvector_serial.c nvector_serial.h  sundialstypes.h sundialsmath.h output.h

output.o: output.c global.h output.h phrqproto.h phqalloc.h 

p2clib.o: p2clib.c p2c.h output.h

parse.o: parse.c global.h phqalloc.h output.h phrqproto.h

phast_files.o: phast_files.c global.h phqalloc.h output.h phrqproto.h input.h

phreeqc_files.o: phreeqc_files.c global.h phqalloc.h output.h phrqproto.h input.h

phqalloc.o: phqalloc.c global.h output.h

prep.o: prep.c global.h phqalloc.h output.h phrqproto.h

print.o: print.c global.h phqalloc.h output.h phrqproto.h

read.o: read.c global.h phqalloc.h output.h phrqproto.h 

readtr.o: readtr.c global.h phqalloc.h output.h phrqproto.h 

smalldense.o: smalldense.c smalldense.h sundialstypes.h sundialsmath.h output.h

spread.o: spread.c global.h phqalloc.h output.h phrqproto.h

step.o: step.c global.h phqalloc.h output.h phrqproto.h

structures.o: structures.c global.h phqalloc.h output.h phrqproto.h 

sundialsmath.o: sundialsmath.c sundialsmath.h sundialstypes.h output.h

tally.o: tally.c global.h phqalloc.h output.h phrqproto.h

tidy.o: tidy.c global.h phqalloc.h output.h phrqproto.h

transport.o: transport.c global.h phqalloc.h output.h phrqproto.h

utilities.o: utilities.c global.h phqalloc.h output.h phrqproto.h

merge.o: merge.c global.h phqalloc.h hst.h output.h phastproto.h

mix.o: mix.c global.h hst.h phqalloc.h output.h phastproto.h

hdf.o:hdf.c  global.h hst.h phqalloc.h output.h phastproto.h

hst.o: hst.c  global.h hst.h phqalloc.h output.h phastproto.h

hstsubs.o: hstsubs.c  global.h hst.h phqalloc.h output.h phastproto.h

# =============================================================================
# End of makefile.
# =============================================================================
