Features not documented in WRIR 99-4259.

	Added new keyword COPY that allows a data entity 
		to be copied from one index to a new index 
		or to a range of indicies. Format is 

	COPY keyword index index_start[-index_end]

	where keyword may be 	SOLUTION
				EQUILIBRIUM_PHASES
				EXCHANGE
				GAS_PHASE
				KINETICS
				MIX
				REACTION
				REACTION_TEMPERATURE
				SOLID_SOLUTION
				SURFACE

	Added new Basic functions
	b$ = PAD(a$, 20)   pads a$ to a total of 20 characters
		with spaces and stores result in b$. PAD returns
		a copy of a$ if a$ is more than 20 characters.
	i = INSTR(a$, b$)  sets i to the character position of
		string b$ in a$, 0 in not found.
	b$ = LTRIM(a$)     trims white space from beginning of 
		string a$ and stores result in b$.
	b$ = RTRIM(a$)     trims white space from end of string 
		a$ and stores result in b$.
	b$ = TRIM(a$)     trims white space from beginning and
		end of string a$ and stores result in b$.



	Added new Basic function SYS that calculates the to
	total amount of an element in all phases (solution,
	equilibrium_phases, surfaces, exchangers, solid solutions, 
	and gas phase). KINETIC reactions are not included.
	The function has two forms: (1) one element name as an
	argument (variable names are user specified)

	10 tot = SYS("As")

	the function will return the total arsenic in the system.
	(2) 5 argumens

	10 tot = SYS("As", count_species, names$, types$, moles)

	will return the total arsenic in the system to tot; count_species--
	the number of species that contain arsenic, including
	solution, equilibrium_phases, surfaces, exchangers, solid solutions, 
	and gas phase species; names$--a character array that has the
	name of each species; type$--a character array that specifies the
	type of phase for the species, aq, equi, surf, ex, s_s, gas, diff. 
	Diff refers to the amount of the element in the diffuse layer of 
	a surface when the explicit diffuse layer calculation is used; 
	moles--an array containing the number of moles of the element in 
	the species. The sum of moles(i) is equal to tot.

	SYS has several special arguments for the form 
	SYS("arg", count, names$, types$, values)
		arg 	is one of the options listed below.
		count 	is a single numeric value and is the number of elements
				in the following arrays.
		name$   is an array of string values.
		type$ 	is an array of string values.
		values 	is an array of numeric values.

	Values of arg:

	elt_name	returns total number of moles of element in system.
			count is the number of species for the element in
				the system, including aqueous, exchange, surface,
				equilibrium_phase, solid solution component, and
				gas phase "species".
			Arrays are filled for each "species"; values are moles.
	"elements" 	returns total number of moles of dissolved elements other
				than H and O.
			count is number of elements, valence states, 
				exchangers, and surfaces.
			Arrays are filled for each element and valence state,
				type is "dis"; exchanger, type is "ex",
				and surface, type is "surf". Values are moles.
	"phases"   	returns maximum saturation index of all phases.
			count is number of phases in system.
			Arrays are filled for each phase; values are
				saturation indexes.
	"aq"		returns sum of moles of all aqueous species.
			count is number of aqueous species in system.
			Arrays are filled with each aqueous species;
				values are moles.
	"ex"		returns sum of moles of all exchange species.
			count is number of exchange species in system.
			Arrays are filled with each exchange species;
				values are moles.
	"surf"		returns sum of moles of all surface species.
			count is number of surface species in system.
			Arrays are filled with each surface species;
				values are moles.
	"surf"		returns sum of moles of all solid solution components.
			count is number of solid solution components in system.
			Arrays are filled with each solid solution component;
				values are moles.
	"gas"		returns sum of moles of all gas components.
			count is number of gas components in system.
			Arrays are filled with each gas component;
				values are moles.

	Added new Basic function, DESCRIPTION, that has the value
	defined for the description field of the SOLUTION keyword line.	

	Added alternative ordinary differential equation solver
	called CVODE, a set of C routines from the Lawrence 
	Livermore National Labs. CVODE is part of the SUNDIALS
	package. CVODE is used in place of the Runge Kutta method
	when "-cvode true" is used within a KINETICS data block.

	KINETICS
		-cvode true

------------------------------------------------------------
Version 2.8:
------------------------------------------------------------

	No new features.

------------------------------------------------------------
Version 2.7:
------------------------------------------------------------
Changed format of selected output file:
	Removed quotations surrounding strings in headings.
	Removed quotations surrounding strings in state variable.
	All fields are 12 or 20 places depending on 
		-high_precision.
	Headings are not truncated even if longer than 
		specified precision.
	For isotopes, missing value is -9999.9
	Selected output is updated each simulation.
		If a species or phase is defined
		subsequent to the simulation where SELECTED_OUTPUT
		was defined it will appear in the selected output
		file in the simulation in which it is defined and
		in subsequent simulations.

Added strings for each file, which can be extracted from the
	executable file with the "ident" command.

Fixed null pointer for isotope_ratios if Basic routine 
	was undefined.

Fixed problem in C++ if structure name is same as member name.
	logk member of logk structure was renamed to log_k.

Added identifier -add_constant to PHASES, EXCHANGE_SPECIES,
	SOLUTION_SPECIES, and SURFACE_SPECIES. 

	-add_constant  -0.301  

	log K is augmented by the specified constant. 


Theory and implementation of isotopes in PHREEQC is documented in:

Thorstenson, D.C., and Parkhurst, D.L., 2002, Calculation of
individual isotope equilibrium constants for implementation in
geochemical models: U.S. Geological Survey Water-Resources
Investigations Report 02-4172, 129 p.

Added KEYWORDS:

ISOTOPES
	Element
	-isotope  isotope_name units standard_ratio
	-total_is_major  T/F (OPTION IS DISABLED!!)

CALCULATE_VALUES
	Name
	-start
	Basic statements, must have SAVE
	-end

ISOTOPE_RATIOS (for printing)
	Name=Calculate_values_name	Isotope_name

ISOTOPE_ALPHAS (for printing)
	Name=Calculate_values_name	Named_logk=named_expression_name

Basic functions:
	calc_value("calc_value_name") 		evaluates a definition of CALCULATE_VALUES
	lk_named("name")			log10(K) of definition in NAMED_EXPRESSIONS
	lk_phase("name")			log10(K) of definition in PHASES
	lk_species("name")			log10(K) of definition in (SOLUTION, EXCHANGE, SURFACE)_SPECIES
	sum_gas("template","element")   	Sum of element in gases with specified template
						template="{C,[13C],[14C]}{O,[18O]}2" includes all CO2 gases
	sum_species("template","element")	Sum of element in aqueous, exchange, and surface species with
						specified template
	sum_s_s("s_s_name","element")		Sum of element in a specified solid solution

PRINT keyword:
	-initial_isotopes  T/F
	-isotope_ratios    T/F
	-isotope_alphas    T/F
	-censor_species    1e-8   # omit species from Distribution of Species if less than 
				  # relative minimum of an element or element redox state
				  # total concentration

SELECTED_OUTPUT keyword:
	-calculate_values  name1 name2 ...
	-isotopes minor_isotope1 minor_isotope2 ....

Added functions LK_SPECIES, LK_NAMED, LK_PHASE for Basic
	interpreter. LK_SPECIES("CaHCO3+") returns the
	log k for the association reaction for the ion pair
	CaHCO3+ at the current temperature. The log K is 
	for the reaction as defined in the database or 
	input file. Similarly, 
	LK_NAMED("Log_alpha_18O_CO2(aq)/CO2(g)") returns the 
	value for the log K at the current temperature using
	expressions defined in NAMED_LOG_K data block; 
	LK_PHASE("Calcite") returns the value of log K 
	for calcite at the current temperature for the 
	dissociation reaction defined in the database or 
	input file. Values are "log10" values.
Example for Basic program:
	10 PRINT "Log10 KCalcite: ", LK_PHASE("Calcite")
	20 PRINT "Log10 KCaHCO3+: ", LK_SPECIES("CaHCO3+")
	30 PRINT " 1000ln(alpha): ", LK_NAMED("Log_alpha_18O_CO2(aq)/CO2(g)")*LOG(10)*1000

NAMED_EXPRESSION--New keyword data block.

	This data block was implemented to facilitate isotopic
	calculations.  It allows analytical expressions that
	are functions of temperature to be defined. The purpose
	is to separate the fractionation factors from the log
	K, so that the fractionation factor or its temperature
	dependence can be easily modified. The named expression
	can be added to a log K for a species or phase by the
	-add_logk identifier in SOLUTION_SPECIES
	EXCHANGE_SPECIES, SURFACE_SPECIES, or PHASES data
	block. Log K, Delta H, and analytical expressions for a 
	log K can be defined with identifiers -log_k, -delta_h,
	and -analytical_expression as described in SOLUTION_SPECIES
	in WRIR 99-4259. Fractionation factors are often defined
	as 1000*ln(alpha). The identifier -ln_alpha1000 can be used
	to enter data in this form. The analytical expression is the
	same as defined in SOLUTION_SPECIES, but the result of the 
	expression is converted to log10(alpha) by dividing by 
	1000*ln(10) before it is summed into log K values.

NAMED_EXPRESSIONS
	Log_K_calcite           #       CaCO3 + 2H3O+ = Ca+2 + 3H2O + CO2
		log_k		8.201 	
		delta_h		-8.035 	kcal
		-analytic	292.29 	0.015455 	-24146.841 	-94.16451 	2248628.9 

	Log_alpha_18O_CO2(aq)/Calcite
		-ln_alpha1000	3.8498	0.0	10.611e3	0.0	-1.8034e6

	Log_alpha_13C_CO2(aq)/Calcite        	
		-ln_alpha1000	2.72	0.0	0.0	0.0	-1.1877e6

------------------------------------------------------------
Added identifier -add_logk to SOLUTION_SPECIES
	EXCHANGE_SPECIES, SURFACE_SPECIES, and PHASES data
	block.

	Allows a named expression to be added to the definition
	of the log K for a species or phase. In the following
	example, the log K for the phase Ca[14C][18O]3 is summed from
	four parts, one defined with the log_k identifier and the
	other three parts from expressions defined in NAMED_EXPRESSIONS.
	The named expression is multiplied by the coefficient at the
	end of the line before it is summed into the log K. A missing
	coefficient is 1.0 by default.

PHASES
	Ca[13C][18O]3
        Ca[13C][18O]3 + 3CO2 + 2H3O+ = Ca+2 + 3H2O + 3CO[18O] + [13C]O2
	log_k		0.903089986991				# 3*log10(2)
	-add_logk	Log_K_calcite				1.0
	-add_logk	Log_alpha_13C_CO2(aq)/Calcite		1.0
	-add_logk	Log_alpha_18O_CO2(aq)/Calcite		3.0


SOLUTION keyword:
	At present, can only define isotopes in the units defined in ISOTOPES.

------------------------------------------------------------
Version 2.6:
------------------------------------------------------------

	No new features.

------------------------------------------------------------
Version 2.5:
------------------------------------------------------------
Added the capability to use square brackets to define an
	"element" name. The brackets act like quotation marks
	in that any character string can be used within the 
	brackets as an element name. For example, [Fe3], [13C],
	and [N5] are now legal "element" names.	All element 
	names without brackets must begin with a capital letter, 
	followed by zero or more lower case letters and underscores.

Added identifier -activity_water for a species in SOLUTION_SPECIES
	data block. This identifier has been added for future updates
	that will allow isotopic calculations. It is intended to be
	used only for isotopic variations of H2O, like D2O or 
	H2[O18]. It forces the activity coefficient for the 
	species to be activity(water)/55.5. This effectively sets 
	the activity of the species to the mole fraction in 
	solution.

Added identifier -bad_step_max to KINETICS data block.
	An integer following -bad_step_max gives the maximum number 
	of times a rate integration may fail before execution of the
	program is terminated. Default is 500.

------------------------------------------------------------
Version 2.4:
------------------------------------------------------------

------------------------------------------------------------
Added identifier -warnings to PRINT keyword. 

	An integer following -warnings gives the maximum number 
	of warnings to print into the output file. A negative 
	number allows all warnings to be printed.

	Example: 	-warnings 20

------------------------------------------------------------
Changed the results of the function CELL_NO in Basic programs.

	Function cell_no in Basic now prints a number equivalent 
	to -solution in SELECTED_OUTPUT data block. It gives the 
	solution number for initial solution calculations and the 
	solution being used in batch reaction calculations. 
	Result is the same as previous versions for ADVECTION or 
	TRANSPORT calculations.

------------------------------------------------------------
Version 2.3:
------------------------------------------------------------
DATABASE--New keyword data block

	It must be the first keyword in the input file. 
	The character string following the keyword is 
	the pathname for the database file to be used
	in the calculation. The file that is specified
	takes precedence over any default database
	name, including environmental variable
	PHREEQC_DATABASE and command line arguments.

LLNL_AQUEOUS_MODEL_PARAMETERS--New keyword data block

	Added new keyword to make aqueous model similar to
	EQ3/6 and Geochemists Workbench when using
	llnl.dat as the database file. Values
	of Debye-Huckel a and b and bdot (ionic strength
	coefficient) are read at fixed temperatures.
	Linear interpolation occurs between temperatures.

	New options for SOLUTION_SPECIES are
		-llnl_gamma  a   , where a is the ion-size parameter.
		-co2_llnl_gamma  , indicates the temperature dependent
			function for the bdot term given in 
			-co2_coefs of LLNL_AQUEOUS_MODEL_PARAMETERS
			will be used. Applies to uncharged
			species only.

LLNL_AQUEOUS_MODEL_PARAMETERS
-temperatures
         0.0100   25.0000   60.0000  100.0000
       150.0000  200.0000  250.0000  300.0000
#debye huckel a (adh)
-dh_a
         0.4939    0.5114    0.5465    0.5995
         0.6855    0.7994    0.9593    1.2180
#debye huckel b (bdh)
-dh_b
         0.3253    0.3288    0.3346    0.3421
         0.3525    0.3639    0.3766    0.3925
-bdot
         0.0394    0.0410    0.0438    0.0460
         0.0470    0.0470    0.0340    0.0000
#cco2   (coefficients for the Drummond (1981) polynomial)
-co2_coefs
        -1.0312              0.0012806
          255.9                 0.4445
      -0.001606

------------------------------------------------------------
Added function SURF to Basic.

	SURF("element", "surface") gives the amount of element 
	sorbed on "surface". "surface" should be the surface 
	name, not the surface-site name (that is, no underscore).

------------------------------------------------------------
Allow decimals in definition of secondary master species.

	Some redox states do not average to integers,
	for convenience in identifying them, decimal numbers
	may be used within the parentheses that define the 
	redox state, example S(0.3) could be used in the
	MASTER_SPECIES data block for the valence state of
	aqueous species S6-2.

------------------------------------------------------------
Eliminate echo of input file in PRINT data block. 

	-echo_input T/F turns echoing on and off. 
	Default is true, initial value is true.
	
------------------------------------------------------------
Added option for an equilibrium-phase to dissolve only. 
	"dis" is added at the end of a line defining an equilibrium-
		phase. No data fields may be omitted. Should not
		be used when adding an alternative reaction.
	Example:
		EQUILIBRIUM_PHASES
		Dolomite 0.0  0.001 dis

------------------------------------------------------------
Version 2.2:
------------------------------------------------------------
Added function EDL to Basic.
	EDL("element", "surface") gives the amount of 
	element in the diffuse layer for "surface", not
	including sorbed species. "surface" should be 
	the surface name, not the surface-site name 
	(that is, no underscore).

	Special values for "element" include:
		"charge" - gives surface charge, equivalents.
		"sigma"  - surface charge density, C/m**2.
		"psi"    - potential at the surface, Volts.
		"water"  - mass of water in the diffuse layer, kg.

------------------------------------------------------------
End of Features not documented in WRIR 99-4259.
------------------------------------------------------------
